- id: '1674240649029'
  alias: Basement Lights
  description: turn on/off basement lights with switch
  trigger:
  - platform: state
    entity_id:
    - light.basement
    to: 'on'
    id: light on
  - platform: state
    entity_id:
    - light.basement
    to: 'off'
    id: light off
  - platform: device
    type: turned_on
    device_id: fd515ee5e864610ab62aab906ba2f821
    entity_id: switch.basement_sink_switch
    domain: switch
    id: sink on
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: device
    type: turned_off
    device_id: fd515ee5e864610ab62aab906ba2f821
    entity_id: switch.basement_sink_switch
    domain: switch
    id: sink off
    for:
      hours: 0
      minutes: 0
      seconds: 2
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: light on
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.basement_sink_switch
          - switch.wall_left_plug
          - switch.wall_right_plug
          - switch.basement_desk_lamp
      - if:
        - condition: state
          entity_id: sensor.mark_note_ble_room_presence
          state: Basement
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.dell_tower
        - type: turn_on
          device_id: fff1787a9e7a855b257b1b8cece4c160
          entity_id: remote.32_tcl_roku_tv
          domain: remote
    - conditions:
      - condition: trigger
        id: light off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.basement_sink_switch
          - switch.wall_left_plug
          - switch.wall_right_plug
          - switch.basement_coffee_plug
          - switch.basement_counter_plug
          - switch.basement_desk_lamp
      - type: turn_off
        device_id: fff1787a9e7a855b257b1b8cece4c160
        entity_id: remote.32_tcl_roku_tv
        domain: remote
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.dell_tower_on
    - conditions:
      - condition: trigger
        id: sink on
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.basement_counter_plug
      - service: light.turn_on
        data:
          color_name: white
          brightness_pct: 75
        target:
          entity_id: light.closet_basement
    - conditions:
      - condition: trigger
        id: sink off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.basement_counter_plug
      - type: turn_off
        device_id: f3639f9f8eb00285ce52ae1e5a500e56
        entity_id: light.closet_basement
        domain: light
  mode: single
- id: '1674396254958'
  alias: Basement Office
  description: Set Basement up for office work
  trigger:
  - platform: tag
    tag_id: basement_office_tag
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.basement_office
    metadata: {}
  mode: single
- id: '1674416761212'
  alias: Backup Failure Notification
  description: send persistant notification if google backups not working.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.backups_stale
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: notify.persistent_notification
    data:
      message: Problems with backups to google!!!
      title: Please Help Me
  mode: single
- id: '1674496545452'
  alias: Vaporizer Schedule
  description: Turn vaporizers on or off according to time and humidity
  trigger:
  - platform: time
    at: 00:00:00
    id: turn on
  - platform: time
    at: 04:00:00
    id: turn off
  - platform: time
    at: 08:00:00
    id: turn on
  - platform: time
    at: '12:00:00'
    id: turn off
  - platform: time
    at: '16:00:00'
    id: turn on
  - platform: time
    at: '20:00:00'
    id: turn off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: turn on
      sequence:
      - service: script.green_vaporizor
        data: {}
      - service: script.yellow_vaporizor
        data: {}
    - conditions:
      - condition: trigger
        id: turn off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.green_plug
          - switch.yellow_plug
  mode: single
- id: '1674568559701'
  alias: Upstairs Space Heater
  description: Turn on space heater is temperature low and house occupied
  trigger:
  - platform: time
    at: '20:30:00'
  condition:
  - condition: and
    conditions:
    - condition: numeric_state
      entity_id: weather.firestone_house
      attribute: temperature
      below: 65
    - condition: state
      entity_id: group.family_anyone
      state: home
  action:
  - service: remote.send_command
    data:
      device: Upstairs Heater
      command: power
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
    target:
      device_id: 687d5dcbc7f9474e09148fb0c4c196fa
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: remote.send_command
    data:
      device: Upstairs Heater
      command: timer
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
    target:
      device_id: 687d5dcbc7f9474e09148fb0c4c196fa
  mode: single
- id: '1674670061254'
  alias: Coffee Button Press
  description: turn coffee off and set coffee ready button for both basement and upstairs
  trigger:
  - platform: state
    entity_id:
    - input_boolean.basement_coffee_button
    id: basement
  - platform: state
    entity_id:
    - input_boolean.upstairs_coffee_button
    id: upstairs
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: basement
      sequence:
      - if:
        - condition: state
          entity_id: switch.basement_coffee_plug
          state: 'off'
        then:
        - if:
          - condition: state
            entity_id: input_boolean.basement_coffee_ready
            state: 'on'
          then:
          - service: script.activate_alexa_actionable_notification
            data:
              text: You already pushed the button, would you like me to start brewing
                coffee?
              event_id: basement_coffee_event
              alexa_device: media_player.basement_echo
          else:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.basement_coffee_ready
          - service: notify.alexa_media_basement_echo
            data:
              message: Coffee Pot is ready to brew coffee
              data:
                type: tts
        else:
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.basement_coffee_plug
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.basement_coffee_ready
        - service: script.moon_lamp_off_2
          data: {}
    - conditions:
      - condition: trigger
        id: upstairs
      sequence:
      - if:
        - condition: state
          entity_id: switch.upstairs_coffee_plug
          state: 'off'
        then:
        - if:
          - condition: state
            entity_id: input_boolean.upstairs_coffee_ready
            state: 'on'
          then:
          - service: notify.alexa_media_master_echo
            data:
              message: You Already Pushed the Button!
              data:
                type: tts
          else:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.upstairs_coffee_ready
          - service: notify.alexa_media_master_echo
            data:
              message: Coffee Pot Ready to brew Coffee!
              data:
                type: tts
        else:
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.upstairs_coffee_plug
        - delay:
            hours: 0
            minutes: 0
            seconds: 0
            milliseconds: 300
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.upstairs_coffee_ready
  mode: single
- id: '1674734486138'
  alias: Master Bathroom Light
  description: adjust master bathroom lights according to day or night
  trigger:
  - platform: state
    entity_id:
    - light.master_bathroom
    to: 'on'
  condition: []
  action:
  - if:
    - condition: time
      before: '20:00:00'
      after: 04:00:00
      weekday:
      - sat
      - fri
      - thu
      - wed
      - tue
      - mon
      - sun
    then:
    - if:
      - condition: numeric_state
        entity_id: light.master_bathroom
        attribute: brightness
        below: 255
      then:
      - service: light.turn_on
        data:
          transition: 30
          brightness_pct: 100
        target:
          entity_id: light.master_bathroom
    else:
    - service: light.turn_on
      data:
        brightness_pct: 25
      target:
        entity_id: light.master_bathroom
  mode: single
- id: '1648230313760'
  alias: Bed Sensors
  description: turn on and off bed sensors with webhook from ifttt
  trigger:
  - platform: webhook
    webhook_id: bed_sensor_mark_off
    id: mark off
    allowed_methods:
    - POST
    - PUT
    local_only: false
  - platform: webhook
    webhook_id: bed_sensor_mark_on
    id: mark on
    allowed_methods:
    - POST
    - PUT
    local_only: false
  - platform: webhook
    webhook_id: bed_sensor_holly_off
    id: holly off
    allowed_methods:
    - POST
    - PUT
    local_only: false
  - platform: webhook
    id: holly on
    webhook_id: bed_sensor_holly_on
    allowed_methods:
    - POST
    - PUT
    local_only: false
  - platform: state
    entity_id:
    - binary_sensor.withings_in_bed_holly
    to: 'on'
    id: holly on
  - platform: state
    entity_id:
    - binary_sensor.withings_in_bed_holly
    from: 'on'
    id: holly off
  - platform: state
    entity_id:
    - binary_sensor.withings_in_bed_mark
    to: 'on'
    id: mark on
  - platform: state
    entity_id:
    - binary_sensor.withings_in_bed_mark
    from: 'on'
    id: mark off
  - platform: webhook
    webhook_id: bed-sensors-d1jJhPAxx0jyIv8X-xkxkJJq
    id: mark off
    allowed_methods:
    - POST
    - PUT
    local_only: false
  - platform: webhook
    webhook_id: bed-sensors-yYI0gje9kR7UgsQpidE2Fe5g
    id: mark on
    allowed_methods:
    - POST
    - PUT
    local_only: false
  - platform: webhook
    webhook_id: bed-sensors-6GEBCdj2WBsfpsWPxZyN6-xK
    id: holly off
    allowed_methods:
    - POST
    - PUT
    local_only: false
  - platform: webhook
    webhook_id: bed-sensors-An9N8ObEgERMN8J_0SF55T_v
    id: holly on
    allowed_methods:
    - POST
    - PUT
    local_only: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: mark off
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bed_mark
    - conditions:
      - condition: trigger
        id: mark on
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bed_mark
    - conditions:
      - condition: trigger
        id: holly off
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bed_holly
    - conditions:
      - condition: trigger
        id: holly on
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bed_holly
  mode: single
- id: '1674762589678'
  alias: Coffee Announcement
  description: ask if i want coffee to brew
  trigger:
  - platform: state
    entity_id:
    - light.basement
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: basement coffee
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: basement_coffee_event
      event_response_type: ResponseYes
    id: basement yes
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: basement_coffee_event
      event_response_type: ResponseNo
    id: Basement no
  - platform: state
    entity_id:
    - light.coffee_light
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
    id: upstairs coffee
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: upstairs_coffee_event
      event_response_type: ResponseYes
    id: upstairs yes
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: upstairs_coffee_event
      event_response_type: ResponseNo
    id: upstairs no
  - platform: time
    at: 00:00:00
    id: reset
  - platform: state
    entity_id:
    - input_boolean.bed_mark
    to: 'off'
    id: upstairs coffee
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: basement_coffee_event
      event_response_type: ResponseNone
    id: basement none
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: basement coffee
      sequence:
      - if:
        - condition: template
          value_template: '{{ now().weekday() == 0 }}'
        then:
        - if:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.basement_coffee_ready
              state: 'on'
            - condition: state
              entity_id: sensor.mark_note_ble_room_presence
              state: Basement
          then:
          - service: script.activate_alexa_actionable_notification
            data:
              text: Today is Monday; replace batteries in keyboard and mouse, also,
                would you like me to start the coffee pot?
              event_id: basement_coffee_event
              alexa_device: media_player.basement_echo
          else:
          - service: notify.alexa_media
            data:
              message: If you want coffee, you will need to brew it yourself! Remember
                to replace rechargeable batteries.
              target:
              - media_player.basement_echo
              data:
                type: tts
          - if:
            - condition: state
              entity_id: sensor.mark_note_ble_room_presence
              state: Basement
            then:
            - service: notify.alexa_media
              data:
                message: If you want coffee, you will need to brew it yourself! Remember
                  to replace rechargeable batteries.
                target:
                - media_player.basement_echo
                data:
                  type: tts
            else:
            - service: notify.alexa_media
              data:
                message: Hello, how are you doing today?
                target:
                - media_player.basement_echo
                data:
                  type: tts
        else:
        - if:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.basement_coffee_ready
              state: 'on'
            - condition: state
              entity_id: sensor.mark_note_ble_room_presence
              state: Basement
          then:
          - service: script.activate_alexa_actionable_notification
            data:
              text: Would you like me to start the coffee?
              event_id: basement_coffee_event
              alexa_device: media_player.basement_echo
          else:
          - if:
            - condition: state
              entity_id: sensor.mark_note_ble_room_presence
              state: Basement
            then:
            - service: notify.alexa_media
              data:
                message: If you want coffee, you will need to brew it yourself!
                target:
                - media_player.basement_echo
                data:
                  type: tts
            else:
            - service: notify.alexa_media
              data:
                message: Hello, How are you doing today?
                target:
                - media_player.basement_echo
                data:
                  type: tts
    - conditions:
      - condition: trigger
        id: basement yes
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.basement_coffee_plug
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.basement_coffee_ready
      - service: notify.alexa_media
        data:
          message: Coffee should be ready in a few minutes.  Remeber, Good to the
            last drop!
          target:
          - media_player.basement_echo
          data:
            type: tts
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: person.mark
            state: home
          - condition: not
            conditions:
            - condition: state
              entity_id: person.holly
              state: home
        then:
        - service: script.temp_adjust_basement
          data: {}
    - conditions:
      - condition: trigger
        id: Basement no
      sequence:
      - service: notify.alexa_media
        data:
          message: NO coffee for you
          target:
          - media_player.basement_echo
          data:
            type: tts
    - conditions:
      - condition: trigger
        id: upstairs coffee
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.coffee_ran
          state: 'off'
        - condition: time
          after: 04:00:00
          weekday:
          - sun
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          before: '10:00:00'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.upstairs_coffee_ready
          state: 'on'
        then:
        - service: script.activate_alexa_actionable_notification
          data:
            text: Would you like me to start the coffee?
            event_id: upstairs_coffee_event
            alexa_device: media_player.master_echo
        else:
        - service: notify.alexa_media
          data:
            message: If you want coffee, you will need to brew it yourself!
            target:
            - media_player.master_echo
            data:
              type: tts
    - conditions:
      - condition: trigger
        id: upstairs yes
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.coffee_ran
          state: 'off'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.upstairs_coffee_plug
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.upstairs_coffee_ready
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.coffee_ran
      - service: notify.alexa_media
        data:
          message: Coffee should be ready in 5 minutes
          target:
          - media_player.master_echo
          data:
            type: tts
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
      - service: notify.alexa_media
        data:
          message: Best part of waking up is folders in your cup.  You got it coffee
            is ready.
          target:
          - media_player.master_echo
          data:
            type: tts
    - conditions:
      - condition: trigger
        id: upstairs no
      sequence:
      - service: notify.alexa_media
        data:
          message: I won't turn on the coffee.
          target:
          - media_player.master_echo
          data:
            type: tts
    - conditions:
      - condition: trigger
        id: reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.coffee_ran
    - conditions:
      - condition: trigger
        id: basement none
      sequence:
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.basement
  mode: single
- id: '1674863381231'
  alias: Medication
  description: Medication reminders and button for Mark
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3095f9764282f79dc9005d1bbea59b24
    type: click
    subtype: single
    discovery_id: 0x00158d0008836ef3 click_single
    id: morning
  - platform: device
    domain: mqtt
    device_id: 3095f9764282f79dc9005d1bbea59b24
    type: click
    subtype: double
    discovery_id: 0x00158d0008836ef3 click_double
    id: evening
  - platform: time
    at: 00:00:00
    id: reset
  - platform: numeric_state
    entity_id: sensor.medicine_button_battery
    below: 10
    id: battery low
  - platform: device
    domain: mqtt
    device_id: 3095f9764282f79dc9005d1bbea59b24
    type: action
    subtype: hold
    discovery_id: 0x00158d0008836ef3 action_hold
    id: shot
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: morning
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.morning_pill
    - conditions:
      - condition: trigger
        id: evening
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.evening_pill
    - conditions:
      - condition: trigger
        id: reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.evening_pill
          - input_boolean.morning_pill
          - input_boolean.morning_shot
    - conditions:
      - condition: trigger
        id: battery low
      sequence:
      - service: notify.persistent_notification
        data:
          message: Medicine Button (green bathroom cabinet)
          title: REPLACE BATTERY (1 x CR2032)
      - service: notify.email
        data:
          message: Medicine Button
          title: BATTERY CR2032
          target:
          - 3305243522@vtext.com
    - conditions:
      - condition: trigger
        id: shot
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.morning_shot
  mode: single
- id: '1674909942174'
  alias: Appliance Cabinet Light
  description: Turn hall light on/off if not on when getting into cabinet
  trigger:
  - type: opened
    platform: device
    device_id: 24221612906e27383ccbec76180ba4dd
    entity_id: binary_sensor.appliance_cabinet_door_sensor_contact
    domain: binary_sensor
    id: appliance open
  - type: not_opened
    platform: device
    device_id: 24221612906e27383ccbec76180ba4dd
    entity_id: binary_sensor.appliance_cabinet_door_sensor_contact
    domain: binary_sensor
    id: appliance closed
  - type: bat_low
    platform: device
    device_id: 24221612906e27383ccbec76180ba4dd
    entity_id: binary_sensor.appliance_cabinet_door_sensor_battery_low
    domain: binary_sensor
    id: low battery
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: appliance open
      sequence:
      - if:
        - condition: state
          entity_id: light.hallway
          state: 'off'
        then:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.hallway
        else:
        - service: automation.turn_off
          data:
            stop_actions: false
          target:
            entity_id: automation.appliance_cabinet_light
    - conditions:
      - condition: trigger
        id: appliance closed
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.hallway
    - conditions:
      - condition: trigger
        id: low battery
      sequence:
      - service: notify.persistent_notification
        data:
          message: Appliance Cabinet Sensor
          title: REPLACE BATTERY (1 x CR2032)
      - service: notify.email
        data:
          message: Appliance Cabinet Sensor
          title: BATTERY CR2032
          target:
          - 3305243522@vtext.com
  mode: restart
- id: '1674951893060'
  alias: Turn Motion Sensor On/Off
  description: Turn upstairs motion sensor off or on at night
  trigger:
  - platform: state
    entity_id:
    - input_boolean.bed_holly
    - input_boolean.bed_mark
    to: 'on'
    id: 'On'
    enabled: true
  - platform: state
    entity_id:
    - input_boolean.bed_holly
    - input_boolean.bed_mark
    - light.upstairs_office
    to: 'off'
    id: 'Off'
    enabled: true
  - platform: time
    at: '19:01:00'
    id: 'On'
  - platform: state
    entity_id:
    - light.family_fan
    to: 'on'
    id: night
  - platform: state
    entity_id:
    - fan.family_fan
    to: 'on'
    id: night
  - platform: time
    at: 07:00:00
    id: '0700'
  - platform: event
    event_type: alexa_actionable_notification
    id: visitor_yes
    event_data:
      event_id: visitor_event
      event_response_type: ResponseYes
  - platform: event
    event_type: alexa_actionable_notification
    id: visitor_no
    event_data:
      event_id: visitor_event
      event_response_type: ResponseNo
  - platform: event
    event_type: alexa_actionable_notification
    id: visitor_none
    event_data:
      event_id: visitor_event
      event_response_type: ResponseNone
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'On'
      sequence:
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.bed_holly
            state: 'on'
          - condition: state
            entity_id: input_boolean.bed_mark
            state: 'on'
          - condition: state
            entity_id: input_boolean.house_guest
            state: 'off'
          - condition: time
            after: '19:00:00'
            before: 04:00:00
            weekday:
            - sat
            - fri
            - thu
            - wed
            - tue
            - mon
            - sun
          - condition: state
            entity_id: switch.visitors
            state: 'off'
        then:
        - service: automation.turn_off
          data:
            stop_actions: false
          target:
            entity_id:
            - automation.kitchen_motion
            - automation.landing_test
            - automation.upstairs_staircase_motion_lights_2
            - automation.basement_motion
            - automation.outside_work_on_off
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.upstairs_office
            - light.kitchen_cabinets
            - light.kitchen_fan
            - light.kitchen_fridge
        - service: script.temp_adjust_master_bedroom
          data: {}
        - if:
          - condition: time
            after: '18:00:00'
            before: '23:59:59'
            weekday:
            - sat
            - fri
            - thu
            - wed
            - tue
            - mon
            - sun
          then:
          - service: light.turn_off
            data: {}
            target:
              entity_id: '{% set reject = [ ''master_fan'', ''holly_lamp'', ''whole_house''
                ] %} {{ states.light | rejectattr(''object_id'', ''in'', reject) |
                selectattr(''state'',''eq'',''on'') | map(attribute=''entity_id'')
                | list }}

                '
          - delay:
              hours: 0
              minutes: 0
              seconds: 5
              milliseconds: 0
          - service: light.turn_off
            data: {}
            target:
              entity_id: '{% set reject = [ ''master_fan'', ''holly_lamp'', ''whole_house''
                ] %} {{ states.light | rejectattr(''object_id'', ''in'', reject) |
                selectattr(''state'',''eq'',''on'') | map(attribute=''entity_id'')
                | list }}

                '
        else:
        - if:
          - condition: state
            entity_id: switch.visitors
            state: 'on'
          then:
          - service: script.activate_alexa_actionable_notification
            data:
              text: Do you still have visitors?
              event_id: visitor_event
              alexa_device: media_player.master_echo
      - service: script.secure_house
        data: {}
    - conditions:
      - condition: trigger
        id: 'Off'
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_boolean.bed_holly
            state: 'off'
          - condition: state
            entity_id: input_boolean.bed_mark
            state: 'off'
        then:
        - service: automation.turn_on
          data: {}
          target:
            entity_id:
            - automation.kitchen_motion
            - automation.landing_test
            - automation.upstairs_staircase_motion_lights_2
            - automation.basement_motion
            - automation.outside_work_on_off
        - if:
          - condition: template
            value_template: '{{ is_state(''input_text.temp_adjust_room'',''nmaster
              bedroom'') }}'
          then:
          - service: script.normal_temperature
            data: {}
          - delay:
              hours: 0
              minutes: 0
              seconds: 15
              milliseconds: 0
          - service: input_number.set_value
            data:
              value: 65
            target:
              entity_id: input_number.nest_temp_low
    - conditions:
      - condition: trigger
        id: night
      - condition: and
        conditions:
        - condition: state
          entity_id: automation.upstairs_staircase_motion_lights_2
          state: 'off'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.family_fan
      - service: fan.turn_off
        data: {}
        target:
          entity_id: fan.family_fan
    - conditions:
      - condition: trigger
        id: '0700'
      sequence:
      - service: climate.set_temperature
        data:
          target_temp_high: 74
          target_temp_low: 68
          hvac_mode: heat_cool
        target:
          entity_id: climate.house
    - conditions:
      - condition: trigger
        id: visitor_yes
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.visitors
      - service: notify.alexa_media_master_echo
        data:
          message: Ok Turning off just upstairs lights.
          data:
            type: tts
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.coffee_light
          - light.holly_lamp
          - light.master_fan
          - light.upstairs_office
    - conditions:
      - condition: trigger
        id: visitor_no
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.visitors
      - service: automation.turn_off
        data:
          stop_actions: false
        target:
          entity_id:
          - automation.kitchen_motion
          - automation.landing_test
          - automation.upstairs_staircase_motion_lights_2
          - automation.basement_motion
          - automation.outside_work_on_off
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.upstairs_office
          - light.kitchen_cabinets
          - light.kitchen_fan
          - light.kitchen_fridge
      - service: script.temp_adjust_master_bedroom
        data: {}
      - service: light.turn_off
        data: {}
        target:
          entity_id: '{% set reject = [ ''master_fan'', ''holly_lamp'', ''whole_house''
            ] %} {{ states.light | rejectattr(''object_id'', ''in'', reject) | selectattr(''state'',''eq'',''on'')
            | map(attribute=''entity_id'') | list }}

            '
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id: '{% set reject = [ ''master_fan'', ''holly_lamp'', ''whole_house''
            ] %} {{ states.light | rejectattr(''object_id'', ''in'', reject) | selectattr(''state'',''eq'',''on'')
            | map(attribute=''entity_id'') | list }}

            '
    - conditions:
      - condition: trigger
        id: visitor_none
      sequence:
      - service: notify.alexa_media
        data:
          message: O K you will need to handle lights and automations manually
          target:
          - media_player.master_echo
          data:
            type: tts
  mode: single
- id: '1674997041729'
  alias: Battery Check
  description: check batteryies in devices without HA automations
  trigger:
  - platform: time
    at: 05:05:00
  condition: []
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.garage_motion_sensor_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Garage Motion Sensor
        title: BATTERY REPLACE (2 x AA)
    - service: notify.email
      data:
        message: Garage Motion Sensor
        title: BATTERY 2xAA
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.breezeway_motion_sensor_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Breezeway Motion Sensor
        title: BATTERY REPLACE (2 x AAA)
    - service: notify.email
      data:
        message: Breezeway Motion Sensor
        title: BATTERY 2xAAA
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.bstaircase_motion_sensor_d_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Basement Staircase Motion Sensor (on wall)
        title: BATTERY REPLACE (2 x AAA)
    - service: notify.email
      data:
        message: Basement Staircase Motion Sensor (on wall
        title: BATTERY 2xAAA
        target:
        - 3305243533@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.bstaircase_motion_sensor_u_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Basement Staircase Motion Sensor (on ceiling)
        title: BATTERY REPLACE (2 x AAA)
    - service: notify.email
      data:
        message: Basement Staircase Motion Sensor (on ceiling)
        title: BATTERY 2xAAA
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.basement_office_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Basement Office Switch
        title: BATTERY REPLACE (1 x CR2032)
    - service: notify.email
      data:
        message: Basement Office Switch
        title: BATTERY CR2032
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.breezeway_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Breezeway Switch
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Breezeway Switch
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.kitchen_bw_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Kitchen Switch (by breezeway)
        title: BATTERY REPLACE (1 x CR2032)
    - service: notify.email
      data:
        message: Kitchen Switch (by breezeway)
        title: BATTERY CR2032
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.kitchen_uc_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Kitchen Switch (by living room)
        title: BATTERY REPLACE (1 x CR2032)
    - service: notify.email
      data:
        message: Kitchen Switch (by living room)
        title: BATTERY CR2032
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.kitchen_cabinet_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Kitchen Cabinet Switch (above dishwasher)
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Kitchen Cabinet Switch (above dishwasher)
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.living_room_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Living Room Switch
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Living Room Switch
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.guest_room_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Guest Room Switch (under lamp)
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Guest Room Switch
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.hallway_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Hallway Switch
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Hallway Switch
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.family_room_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Family Room Switch (back end table)
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Family Room Switch
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.upstairs_hw_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Upstairs Staircase Switch (by family room)
        title: BATTERY REPLACE (1 x CR2032)
    - service: notify.email
      data:
        message: Upstairs Staircase Switch (by family room)
        title: BATTERY CR2032
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.upstairs_ms_switch_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Upstairs Staircase Switch (by master bedroom)
        title: BATTERY REPLACE (1 x CR2032)
    - service: notify.email
      data:
        message: Upstairs Staircase Switch (by guitar)
        title: BATTERY CR2032
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.kitchen_1_motion_sensor_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Kitchen Motion Sensor 1
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Kitchen Motion Sensor 1
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.kitchen_2_motion_sensor_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Kitchen Motion Sensor 2
        title: BATTERY REPLACE (1 x CR2450)
    - service: notify.email
      data:
        message: Kitchen Motion Sensor 2
        title: BATTERY CR2450
        target:
        - 3305243522@vtext.com
  - if:
    - condition: numeric_state
      entity_id: sensor.holly_button_battery
      below: 10
    then:
    - service: notify.persistent_notification
      data:
        message: Holly Bedside Button
        title: BATTERY REPLACE (1 x CR2032)
    - service: notify.email
      data:
        message: Holly Bedside Button
        title: BATTERY CR2032
        target:
        - 3305243522@vtext.com
  mode: single
- id: '1675004302217'
  alias: Basement Motion
  description: turn basement lights on according to motion and time, also low battery
    message
  trigger:
  - type: motion
    platform: device
    device_id: 7a34529b2e6e14258d25a1110270df94
    entity_id: binary_sensor.basement_motion_sensor_occupancy
    domain: binary_sensor
    id: motion
  - platform: numeric_state
    entity_id: sensor.basement_motion_sensor_battery
    below: 10
    id: low battery
  - type: not_occupied
    platform: device
    device_id: 52e3a2af27ac78d1297aa5b81a486c23
    entity_id: binary_sensor.hlk_ld2410b_9282_occupancy
    domain: binary_sensor
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: empty
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - if:
        - condition: time
          before: '20:00:00'
          after: 06:00:00
          weekday:
          - sun
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
        then:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.basement
    - conditions:
      - condition: trigger
        id: low battery
      sequence:
      - service: notify.persistent_notification
        data:
          message: Basement Motion Sensor
          title: BATTERY REPLACE (1 x CR2450)
      - service: notify.email
        data:
          message: Basement Motion Sensor
          title: BATTERY CR2450
          target:
          - 3305243522@vtext.com
    - conditions:
      - condition: trigger
        id: empty
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.basement
  mode: single
- id: '1675005772753'
  alias: Medicine Reminder
  description: remind mark to take medicine
  trigger:
  - platform: time
    at: 07:00:00
    id: morning
  - platform: time
    at: '19:00:00'
    id: evening
  - platform: time
    at: 08:00:00
    id: shot
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: morning
      - condition: state
        entity_id: input_boolean.morning_pill
        state: 'off'
      sequence:
      - repeat:
          until:
          - condition: state
            entity_id: input_boolean.morning_pill
            state: 'on'
          sequence:
          - service: script.text_mark_medicine
            data: {}
    - conditions:
      - condition: trigger
        id: evening
      - condition: state
        entity_id: input_boolean.evening_pill
        state: 'off'
      sequence:
      - repeat:
          until:
          - condition: state
            entity_id: input_boolean.evening_pill
            state: 'on'
          sequence:
          - service: script.text_mark_medicine
            data: {}
    - conditions:
      - condition: trigger
        id: shot
      - condition: state
        entity_id: input_boolean.morning_shot
        state: 'off'
      sequence:
      - repeat:
          while:
          - condition: state
            entity_id: input_boolean.morning_shot
            state: 'off'
          sequence:
          - service: script.mark_shot_notification
            data: {}
  mode: single
- id: '1675268056074'
  alias: Zone Mark
  description: run scripts when mark leaves and comes back home
  trigger:
  - platform: zone
    entity_id: person.mark
    zone: zone.geofence
    event: enter
    id: arrive
  - platform: zone
    entity_id: person.mark
    zone: zone.home
    event: leave
    id: leave
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: arrive
      sequence:
      - service: lock.unlock
        data: {}
        target:
          entity_id: lock.garage_door
      - if:
        - condition: state
          entity_id: input_text.mark_driving
          state: Blue
        then:
        - if:
          - condition: state
            entity_id: binary_sensor.blue_garage_door_sensor_contact
            state: 'off'
          then:
          - service: script.blue_door
            data: {}
        else:
        - if:
          - condition: state
            entity_id: binary_sensor.green_garage_door_sensor_contact
            state: 'off'
          then:
          - service: script.green_door
            data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: script.temp_normal
        data: {}
      - service: automation.turn_off
        data:
          stop_actions: true
        target:
          entity_id: automation.mark_zone
    - conditions:
      - condition: trigger
        id: leave
      sequence:
      - service: lock.lock
        data: {}
        target:
          entity_id: lock.house_locks
      - if:
        - condition: state
          entity_id: input_text.mark_driving
          state: Blue
        then:
        - if:
          - condition: state
            entity_id: binary_sensor.blue_garage_door_sensor_contact
            state: 'on'
          then:
          - service: script.blue_door
            data: {}
          else: []
        else:
        - if:
          - condition: state
            entity_id: binary_sensor.green_garage_door_sensor_contact
            state: 'on'
          then:
          - service: script.green_door
            data: {}
  mode: single
- id: '1675278357388'
  alias: Low Battery Level Check
  description: check for batteries under 10% and text mark
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      threshold: 10
      exclude:
        entity_id:
        - sensor.sm_a115a_battery_level
        - sensor.sm_g960u_battery_level
        - sensor.sm_n960u_battery_level
        - sensor.mark_s_ipad_battery_level
        - sensor.alice_battery_level
        - sensor.benson_battery_level
        - sensor.iphone_battery_level
        - sensor.lurch_battery_level
        - sensor.mister_belvedere_battery_level
        - sensor.rosie_battery_level
      actions:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.battery_check
      time: 06:00:00
- id: '1675279703186'
  alias: Morning Briefing Holly
  description: Briefing Holly on mornings going to work.
  trigger:
  - platform: state
    entity_id:
    - light.breezeway
    to: 'on'
  condition:
  - condition: time
    before: 04:45:00
    after: 04:10:00
    weekday:
    - sat
    - fri
    - thu
    - wed
    - tue
    - mon
    - sun
  - type: is_motion
    condition: device
    device_id: 0febc8b3d4ac4b8ddb08bd6b0848ee73
    entity_id: binary_sensor.breezeway_motion_sensor_motion
    domain: binary_sensor
  action:
  - service: script.leaving_house_holly
    data: {}
    enabled: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: script.morning_briefing_holly
    data: {}
  mode: single
- id: '1675280095669'
  alias: Zone Holly
  description: run scripts when holly leaves and comes back home
  trigger:
  - platform: zone
    entity_id: person.holly
    zone: zone.geofence
    event: enter
    id: arrive
  - platform: zone
    entity_id: person.holly
    zone: zone.home
    event: leave
    id: leave
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: arrive
      sequence:
      - service: lock.unlock
        data: {}
        target:
          entity_id: lock.garage_door
      - if:
        - condition: state
          entity_id: input_text.holly_driving
          state: Blue
        then:
        - if:
          - condition: state
            entity_id: binary_sensor.blue_garage_door_sensor_contact
            state: 'off'
          then:
          - service: input_button.press
            data: {}
            target:
              entity_id: input_button.blue_door_helper_button
        else:
        - if:
          - condition: state
            entity_id: binary_sensor.green_garage_door_sensor_contact
            state: 'off'
          then:
          - service: input_button.press
            data: {}
            target:
              entity_id: input_button.green_door_helper_button
        - service: input_button.press
          data: {}
          target:
            entity_id: input_button.green_door_helper_button
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: script.temp_normal
        data: {}
      - service: automation.turn_off
        data:
          stop_actions: false
        target:
          entity_id: automation.holly_zone
    - conditions:
      - condition: trigger
        id: leave
      sequence:
      - service: lock.lock
        data: {}
        target:
          entity_id: lock.house_locks
      - if:
        - condition: state
          entity_id: input_text.holly_driving
          state: Blue
        then:
        - if:
          - condition: state
            entity_id: binary_sensor.blue_garage_door_sensor_contact
            state: 'on'
          then:
          - service: input_button.press
            data: {}
            target:
              entity_id: input_button.blue_door_helper_button
          else: []
        else:
        - if:
          - condition: state
            entity_id: binary_sensor.green_garage_door_sensor_contact
            state: 'on'
          then:
          - service: input_button.press
            data: {}
            target:
              entity_id: input_button.green_door_helper_button
  mode: single
- id: '1672086518949'
  alias: Tag Scanned Person
  description: record last person to scan NFC tag
  trigger:
  - platform: event
    event_type: tag_scanned
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: "{% set person = states.person|selectattr('attributes.user_id', 'eq',
        \n  trigger.event.context.user_id)|first %}{{ person.attributes.friendly_name
        }}"
    target:
      entity_id: input_text.who_is_this
  mode: single
- id: '1675345811153'
  alias: Who Is Driving What Car
  description: set input booleans for who is driving what car for garage door automation
  trigger:
  - platform: tag
    tag_id: Green car
    id: green_tag
  - platform: tag
    tag_id: blue car
    id: blue_tag
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: green_tag
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 500
      - if:
        - condition: state
          entity_id: input_text.who_is_this
          state: Holly
        then:
        - service: input_text.set_value
          data:
            value: Green
          target:
            entity_id: input_text.holly_driving
        - service: automation.turn_on
          data: {}
          target:
            entity_id: automation.holly_zone
        else:
        - service: input_text.set_value
          data:
            value: Green
          target:
            entity_id: input_text.mark_driving
        - service: automation.turn_on
          data: {}
          target:
            entity_id: automation.mark_zone
    - conditions:
      - condition: trigger
        id: blue_tag
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 500
      - if:
        - condition: state
          entity_id: input_text.who_is_this
          state: Holly
        then:
        - service: input_text.set_value
          data:
            value: Blue
          target:
            entity_id: input_text.holly_driving
        - service: automation.turn_on
          data: {}
          target:
            entity_id: automation.holly_zone
        else:
        - service: input_text.set_value
          data:
            value: Blue
          target:
            entity_id: input_text.mark_driving
        - service: automation.turn_on
          data: {}
          target:
            entity_id: automation.mark_zone
  mode: single
- id: '1675440420356'
  alias: Zone Disabled When Home
  description: Disable zone automations when everyone is home.
  trigger:
  - platform: state
    entity_id:
    - group.family_everyone
    to: home
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: everyone
  - platform: time
    at: '23:59:00'
    id: time
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: everyone
      sequence:
      - service: automation.turn_off
        data:
          stop_actions: false
        target:
          entity_id:
          - automation.holly_zone
          - automation.mark_zone
    - conditions:
      - condition: trigger
        id: time
      sequence:
      - if:
        - condition: state
          entity_id: person.mark
          state: home
        then:
        - service: automation.turn_off
          data:
            stop_actions: false
          target:
            entity_id: automation.mark_zone
      - if:
        - condition: state
          entity_id: person.holly
          state: home
        then:
        - service: automation.turn_off
          data:
            stop_actions: false
          target:
            entity_id: automation.holly_zone
  mode: single
- id: '1675545910170'
  alias: Aqara Magic Cube
  description: ''
  use_blueprint:
    path: rvaidya/aqara_magic_cube.yaml
    input:
      remote: 84915f011f53ba8ccf76bcfb5aea9765
      active_face: input_number.cube_face
      flip_90: false
      cube_flip_90: []
      cube_flip_1:
      - service: notify.alexa_media_family_echo
        data:
          data:
            type: tts
          message: kitchen lights
      cube_shake:
      - service: remote.toggle
        data:
          activity: Fire Stick
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
      slide_any_side: false
      cube_slide_any: []
      knock_any_side: false
      cube_knock_any: []
      rotate_any_side: false
      rotate_right: []
      rotate_left: []
      flip_any: true
      cube_flip_2:
      - service: notify.alexa_media_family_echo
        data:
          message: lamp controls
          data:
            type: tts
      cube_flip_3:
      - service: notify.alexa_media_family_echo
        data:
          message: ceiling fan controls
          data:
            type: tts
      cube_flip_4:
      - service: notify.alexa_media_family_echo
        data:
          message: TV Controls
          data:
            type: tts
      cube_flip_5:
      - service: notify.alexa_media_family_echo
        data:
          message: Volume Controls
          data:
            type: tts
      cube_flip_6: []
      one_to_one:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.kitchen
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kitchen_cabinets
      slide_on_one:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.kitchen
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kitchen_cabinets
      slide_on_two:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.family_room_lamp
      rotate_left_side_2:
      - service: light.turn_on
        data:
          brightness_step_pct: -10
        target:
          device_id: 49084123033ed91e58adc6cb4de7ccd8
      rotate_right_side_2:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
        target:
          device_id: 49084123033ed91e58adc6cb4de7ccd8
      rotate_right_side_1:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
        target:
          device_id: 9f78db1000747c0e134c3ed2c91f8e7d
      rotate_left_side_1:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
        target:
          device_id: 9f78db1000747c0e134c3ed2c91f8e7d
      two_to_two:
      - service: light.toggle
        data: {}
        target:
          device_id: 49084123033ed91e58adc6cb4de7ccd8
      three_to_three:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.family_fan
      slide_on_three:
      - service: fan.toggle
        data: {}
        target:
          device_id: 5aa26700165cc6f66821bff5d98c980b
      rotate_left_side_3:
      - service: fan.decrease_speed
        data: {}
        target:
          device_id: 5aa26700165cc6f66821bff5d98c980b
      rotate_right_side_3:
      - service: fan.increase_speed
        data: {}
        target:
          device_id: 5aa26700165cc6f66821bff5d98c980b
      four_to_four:
      - service: remote.send_command
        data:
          device: '75304590'
          command: Play
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
      slide_on_four:
      - service: remote.send_command
        data:
          device: '75304590'
          command: Stop
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
      rotate_left_side_4:
      - service: remote.send_command
        data:
          device: '75304590'
          command: SkipBack
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
      rotate_right_side_4:
      - service: remote.send_command
        data:
          device: '75304590'
          command: SkipForward
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
      slide_on_five:
      - service: remote.send_command
        data:
          device: '50980901'
          command: Mute
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
      rotate_left_side_5:
      - service: remote.send_command
        data:
          device: '50980901'
          command: VolumeDown
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
      rotate_right_side_5:
      - service: remote.send_command
        data:
          device: '50980901'
          command: VolumeUp
        target:
          device_id: 88f67465a2e48f4b8dc487a33c4dccc7
- id: '1675697412917'
  alias: Chores
  description: tag scan and reset for sweeper cleaning
  trigger:
  - platform: tag
    tag_id: f7577aa9-8551-437d-a8c8-b9f061ff59b4
    id: alice
  - platform: tag
    tag_id: 08a34285-3566-4cca-84a7-3ec8d59bdd65
    id: benson
  - platform: tag
    tag_id: cdc34858-ca44-4603-ad44-537bfe3ae610
    id: lurch
  - platform: tag
    tag_id: 699f74f7-9f79-4726-960c-30ab726134c9
    id: belvedere
  - platform: tag
    tag_id: 70079f5e-4605-4fdb-acaa-2eb8acccdb92
    id: rosie
  - platform: time
    at: 00:15:00
    id: daily reset
  - platform: state
    entity_id:
    - input_boolean.water_fountain_change
    id: fountain count
    to: 'on'
  - platform: template
    value_template: '{{ now().weekday() == 0 }}'
    id: Monday
  - platform: template
    value_template: '{{ now().weekday() == 1 }}'
    id: Tuesday
  - platform: template
    value_template: '{{ now().weekday() == 2 }}'
    id: Wednesday
  - platform: template
    value_template: '{{ now().weekday() == 3 }}'
    id: Thursday
  - platform: template
    value_template: '{{ now().weekday() == 4 }}'
    id: Friday
  - platform: template
    value_template: '{{ now().weekday() == 5 }}'
    id: Saturday
  - platform: template
    value_template: '{{ now().weekday() == 6 }}'
    id: Sunday
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alice
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.clean_alice
    - conditions:
      - condition: trigger
        id: benson
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.clean_benson
    - conditions:
      - condition: trigger
        id: lurch
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.clean_lurch
    - conditions:
      - condition: trigger
        id: belvedere
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.clean_mr_belvedere
    - conditions:
      - condition: trigger
        id: rosie
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.clean_rosie
    - conditions:
      - condition: trigger
        id: Monday
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.clean_alice
          - input_boolean.clean_benson
          - input_boolean.clean_lurch
          - input_boolean.clean_rosie
          - input_boolean.clean_mr_belvedere
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.dust_house
    - conditions:
      - condition: trigger
        id: daily reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.breezeway_leaving_house
          - input_boolean.breezeway_entering_house
      - if:
        - condition: template
          value_template: '{{ states(''input_datetime.fountain_date'') == states(''sensor.date'')
            }}'
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.water_fountain_change
        - service: input_datetime.set_datetime
          data:
            date: '{{ (now() + timedelta(days=2)).strftime(''%Y-%m-%d'') }}'
          target:
            entity_id: input_datetime.fountain_date
        - if:
          - condition: template
            value_template: '{{ states(''counter.water_fountain_count'')|float ==
              4 }}'
          then:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.water_fountain_clean
          - service: counter.reset
            data: {}
            target:
              entity_id: counter.water_fountain_count
          else:
          - service: counter.increment
            data: {}
            target:
              entity_id: counter.water_fountain_count
        else:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.humming_bird_syrup
    - conditions:
      - condition: trigger
        id: Tuesday
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.sweep_furniture
          - input_boolean.clean_ceiling_fans
    - conditions:
      - condition: trigger
        id: fountain count
      sequence:
      - if:
        - condition: numeric_state
          entity_id: counter.water_fountain_count
          below: 4
        then:
        - service: counter.increment
          data: {}
          target:
            entity_id: counter.water_fountain_count
        else:
        - service: counter.reset
          data: {}
          target:
            entity_id: counter.water_fountain_count
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.water_fountain_clean
    - conditions:
      - condition: trigger
        id: Wednesday
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.clean_steps
    - conditions:
      - condition: trigger
        id: Thursday
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.clean_master_bathroom
    - conditions:
      - condition: trigger
        id: Friday
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.clean_green_bathroom
    - conditions:
      - condition: trigger
        id: Saturday
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.mop_kitchen
          - input_boolean.kitchen_curtains
    - conditions:
      - condition: trigger
        id: Sunday
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.clean_steps
  mode: single
- id: '1675972683768'
  alias: Tag Assistance
  description: call for help when scanned one in each car
  trigger:
  - platform: tag
    tag_id: Assistance Required
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: media_player.play_media
    data:
      media_content_id: announce " {{ states('input_text.who_is_this') }} needs help!
        "
      media_content_type: custom
    target:
      entity_id: media_player.portable_echo
  mode: single
- id: '1676415940910'
  alias: Porch Lights
  description: Turn on off porch light
  trigger:
  - platform: sun
    event: sunset
    offset: '-10:00'
  condition: []
  action: []
  mode: single
- id: '1676848009583'
  alias: Trash Reminder
  description: Reminder to take out trash
  trigger:
  - platform: calendar
    event: start
    offset: 0:0:0
    entity_id: calendar.trash
    id: Trash Day
  - platform: time
    at: '17:00:00'
    id: announcement
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: trash_can_event
      event_response_type: ResponseYes
    id: 'Yes'
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: trash_can_event
      event_response_type: ResponseNo
    id: 'No'
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: trash_can_event
      event_response_type: ResponseNone
    id: no answer
    enabled: true
  - platform: tag
    tag_id: Trash Cans Done
    id: tag scan
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Trash Day
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.trash_cans
    - conditions:
      - condition: trigger
        id: announcement
      sequence:
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.trash_cans
            state: 'on'
          - condition: state
            entity_id: calendar.trash
            state: 'on'
        then:
        - service: script.activate_alexa_actionable_notification
          data:
            text: Did you remember to put the trash cans out for pickup tomorrow?
            event_id: trash_can_event
            alexa_device: media_player.kitchen_echo
      - service: notify.alexa_media_family_echo
        data:
          message: Thanks for taking trash out.
          data:
            type: tts
    - conditions:
      - condition: trigger
        id: 'Yes'
      sequence:
      - service: notify.alexa_media_kitchen_echo
        data:
          message: Good job you remembered!
          data:
            type: tts
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.trash_cans
    - conditions:
      - condition: trigger
        id: 'No'
      sequence:
      - delay:
          hours: 0
          minutes: 15
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: input_boolean.trash_cans
          state: 'on'
        then:
        - service: script.activate_alexa_actionable_notification
          data:
            text: Did you remember to put the trash cans out for pickup tomorrow?
            event_id: trash_can_event
            alexa_device: media_player.kitchen_echo
        else:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.trash_cans
    - conditions:
      - condition: trigger
        id: no answer
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: Did you remember to put the trash cans out for pickup tomorrow?
          event_id: trash_can_event
          alexa_device: media_player.kitchen_echo
    - conditions:
      - condition: trigger
        id: tag scan
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.trash_cans
  mode: single
- id: '1677025316611'
  alias: Alarm Lights
  description: turn on lights when holly's phone alarm goes off
  trigger:
  - platform: template
    value_template: '{{now().strftime("%a %h %d %H:%M %Z %Y") == (((state_attr(''sensor.sm_g960u_next_alarm'',
      ''Time in Milliseconds'') | int / 1000)) | timestamp_custom(''%a %h %d %H:%M
      %Z %Y''))}}'
  condition:
  - condition: state
    entity_id: person.holly
    state: home
  action:
  - service: script.wakeup_master_lights
    data: {}
  - if:
    - condition: state
      entity_id: weather.home
      state: lightning-rainy
    - condition: or
      conditions:
      - condition: state
        entity_id: weather.home
        state: pouring
      - condition: or
        conditions:
        - condition: state
          entity_id: weather.home
          state: rainy
        - condition: or
          conditions:
          - condition: state
            entity_id: weather.home
            state: snowy-rainy
    then:
    - service: light.turn_on
      data:
        color_name: blue
        brightness_pct: 100
      target:
        entity_id: light.wiz_bulb
  mode: single
- id: '1678149826764'
  alias: Sweeper Schedule Alice
  description: Run Alice according to schedule time
  trigger:
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_alice'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_alice'', ''minute''))
      }}'
    id: start
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_alice'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_alice'', ''minute'')
      + 30) }}'
    id: stop
  - platform: state
    entity_id:
    - switch.basement_coffee_plug
    to: 'on'
    id: workstart
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_stop_time'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_stop_time'', ''minute''))
      }}'
    id: awaystop
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id: vacuum.alice
    - conditions:
      - condition: trigger
        id: stop
      sequence:
      - service: vacuum.return_to_base
        data: {}
        target:
          entity_id: vacuum.alice
    - conditions:
      - condition: trigger
        id: workstart
      - condition: not
        conditions:
        - condition: zone
          entity_id: person.holly
          zone: zone.home
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.visitors
          state: 'off'
        - condition: template
          value_template: '{{ (as_timestamp(now()) - as_timestamp(states.vacuum.alice.last_changed))
            | timestamp_custom("%H", false)| int >= 5 }}

            '
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: '{{ (now() + timedelta( minutes = 30 )).hour }}:{{ (now() + timedelta(
            minutes = 30 )).minute }}

            '
        target:
          entity_id: input_datetime.sweeper_stop_time
      - service: vacuum.start
        data: {}
        target:
          entity_id: vacuum.alice
    - conditions:
      - condition: trigger
        id: awaystop
      sequence:
      - service: vacuum.return_to_base
        data: {}
        target:
          entity_id: vacuum.alice
  mode: single
- id: '1678150112255'
  alias: Sweeper Out Of Service
  description: turn schedules on or off when out of service
  trigger:
  - platform: state
    entity_id:
    - input_boolean.sweeper_out_of_service_alice
    id: alice
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - input_boolean.sweeper_out_of_service_benson
    id: benson
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: state
    entity_id:
    - input_boolean.sweeper_out_of_service_lurch
    id: lurch
  - platform: state
    entity_id:
    - input_boolean.sweeper_out_of_service_mister_belvedere
    id: mister belvedere
  - platform: state
    entity_id:
    - input_boolean.sweeper_out_of_service_rosie
    id: rosie
  - platform: state
    entity_id:
    - switch.visitors
    id: visitors
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alice
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.sweeper_out_of_service_alice
          state: 'on'
        then:
        - service: automation.turn_off
          data:
            stop_actions: true
          target:
            entity_id: automation.sweeper_schedule_alice
        else:
        - if:
          - condition: state
            entity_id: input_boolean.sweeper_out_of_service_alice
            state: 'off'
          then:
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.sweeper_schedule_alice
    - conditions:
      - condition: trigger
        id: benson
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.sweeper_out_of_service_benson
          state: 'on'
        then:
        - service: automation.turn_off
          data:
            stop_actions: true
          target:
            entity_id: automation.sweeper_schedule_benson
        else:
        - if:
          - condition: state
            entity_id: input_boolean.sweeper_out_of_service_benson
            state: 'off'
          then:
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.sweeper_schedule_benson
    - conditions:
      - condition: trigger
        id: lurch
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.sweeper_out_of_service_lurch
          state: 'on'
        then:
        - service: automation.turn_off
          data:
            stop_actions: true
          target:
            entity_id: automation.sweeper_schedule_lurch
        else:
        - if:
          - condition: state
            entity_id: input_boolean.sweeper_out_of_service_lurch
            state: 'off'
          then:
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.sweeper_schedule_lurch
    - conditions:
      - condition: trigger
        id: mister belvedere
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.sweeper_out_of_service_mister_belvedere
          state: 'on'
        then:
        - service: automation.turn_off
          data:
            stop_actions: true
          target:
            entity_id: automation.sweeper_schedule_mister_belvedere
        else:
        - if:
          - condition: state
            entity_id: input_boolean.sweeper_out_of_service_mister_belvedere
            state: 'off'
          then:
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.sweeper_schedule_mister_belvedere
    - conditions:
      - condition: trigger
        id: rosie
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.sweeper_out_of_service_rosie
          state: 'on'
        then:
        - service: automation.turn_off
          data:
            stop_actions: true
          target:
            entity_id: automation.sweeper_schedule_rosie
        else:
        - if:
          - condition: state
            entity_id: input_boolean.sweeper_out_of_service_rosie
            state: 'off'
          then:
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.sweeper_schedule_rosie
    - conditions:
      - condition: trigger
        id: visitors
      sequence:
      - if:
        - condition: state
          entity_id: switch.visitors
          state: 'on'
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id:
            - input_boolean.sweeper_out_of_service_alice
            - input_boolean.sweeper_out_of_service_benson
        else:
        - if:
          - condition: state
            entity_id: switch.visitors
            state: 'off'
          then:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id:
              - input_boolean.sweeper_out_of_service_alice
              - input_boolean.sweeper_out_of_service_benson
  mode: single
- id: '1678150791029'
  alias: Sweeper Schedule Benson
  description: Run Benson according to schedule time
  trigger:
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_benson'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_benson'', ''minute''))
      }}'
    id: start
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_benson'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_benson'', ''minute'')
      + 30) }}'
    id: stop
  - platform: state
    entity_id:
    - switch.basement_coffee_plug
    to: 'on'
    id: workstart
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_stop_time'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_stop_time'', ''minute''))
      }}'
    id: awaystop
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id:
          - vacuum.benson
    - conditions:
      - condition: trigger
        id: stop
      sequence:
      - service: vacuum.return_to_base
        data: {}
        target:
          entity_id:
          - vacuum.benson
    - conditions:
      - condition: trigger
        id: workstart
      - condition: not
        conditions:
        - condition: zone
          entity_id: person.holly
          zone: zone.home
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.visitors
          state: 'off'
        - condition: template
          value_template: '{{ (as_timestamp(now()) - as_timestamp(states.vacuum.benson.last_changed))
            | timestamp_custom("%H", false)| int >= 5 }}

            '
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: '{{ (now() + timedelta( minutes = 30 )).hour }}:{{ (now() + timedelta(
            minutes = 30 )).minute }}

            '
        target:
          entity_id: input_datetime.sweeper_stop_time
      - service: vacuum.start
        data: {}
        target:
          entity_id:
          - vacuum.benson
    - conditions:
      - condition: trigger
        id: awaystop
      sequence:
      - service: vacuum.return_to_base
        data: {}
        target:
          entity_id: vacuum.benson
  mode: single
- id: '1678151282756'
  alias: Sweeper Schedule Lurch
  description: Run Lurch according to schedule time
  trigger:
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_lurch'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_lurch'', ''minute''))
      }}'
    id: start
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_lurch'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_lurch'', ''minute'')
      + 30) }}'
    id: stop
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id:
          - vacuum.lurch
    - conditions:
      - condition: trigger
        id: stop
      sequence:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: vacuum.lurch
            state: docked
        then:
        - service: vacuum.return_to_base
          data: {}
          target:
            device_id: 642c902db590aa21f71b69497f0ee024
  mode: single
- id: '1678151659675'
  alias: Sweeper Schedule Mister Belvedere
  description: Run Mister Belvedere according to schedule time
  trigger:
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_mister_belvedere'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_mister_belvedere'',
      ''minute'')) }}'
    id: start
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_mister_belvedere'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_mister_belvedere'',
      ''minute'') + 30) }}'
    id: stop
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id:
          - vacuum.mister_belvedere
    - conditions:
      - condition: trigger
        id: stop
      sequence:
      - service: vacuum.return_to_base
        data: {}
        target:
          entity_id:
          - vacuum.mister_belvedere
  mode: single
- id: '1678201858276'
  alias: Sweeper Schedule Rosie
  description: sweep floor and zone according to schedule for upstairs
  trigger:
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_rosie'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_rosie'', ''minute''))
      }}'
  - platform: template
    value_template: '{{ ((now().hour * 60) + (now().minute)) == ((state_attr(''input_datetime.sweeper_time_rosie'',
      ''hour'') * 60) + state_attr(''input_datetime.sweeper_time_rosie'', ''minute'')
      + 240) }}'
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.sweep_zone_office
      state: 'on'
    then:
    - service: media_player.play_media
      data:
        media_content_id: clean office
        media_content_type: routine
      target:
        entity_id: media_player.master_echo
    - service: input_boolean.toggle
      data: {}
      target:
        entity_id: input_boolean.sweep_zone_office
    else:
    - service: media_player.play_media
      data:
        media_content_id: clean master bedroom
        media_content_type: routine
      target:
        entity_id: media_player.master_echo
    - service: input_boolean.toggle
      data: {}
      target:
        entity_id: input_boolean.sweep_zone_office
  mode: single
- id: '1678402955371'
  alias: Washer Running
  description: turn on/off helper boolean for washng machine
  trigger:
  - type: power
    platform: device
    device_id: f4f40f8493b5a0c78dca7a00d6f210be
    entity_id: sensor.zooz_washer_switch_power_meter
    domain: sensor
    above: 1
    id: 'on'
  - type: power
    platform: device
    device_id: f4f40f8493b5a0c78dca7a00d6f210be
    entity_id: sensor.zooz_washer_switch_power_meter
    domain: sensor
    below: 0.5
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: 'off'
  - platform: state
    entity_id:
    - sensor.washer_vibration_sensor_action
    attribute: action
    to: tilt
    id: tilt
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.washer_running
          - input_boolean.washer_loaded
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.washer_running
      - service: media_player.play_media
        data:
          media_content_id: Announce, washing machine is finished!
          media_content_type: custom
        target:
          entity_id: media_player.laundry_echo
    - conditions:
      - condition: trigger
        id: tilt
      sequence:
      - if:
        - type: is_power
          condition: device
          device_id: f4f40f8493b5a0c78dca7a00d6f210be
          entity_id: sensor.zooz_washer_switch_power_meter
          domain: sensor
          below: 1
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.washer_loaded
  mode: single
- id: '1678994816045'
  alias: Morning Briefing Mark
  description: give morning report and status of sweepers
  trigger:
  - platform: state
    entity_id:
    - switch.upstairs_coffee_plug
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - service: script.morning_briefing_mark
    data: {}
  mode: single
- id: '1679239750007'
  alias: Birthday Reminder Text
  description: send text with upcoming birthday list
  trigger:
  - platform: template
    value_template: '{{ (now().day == 1) and ((now().hour * 60) + (now().minute) ==
      840) }}'
  - platform: template
    value_template: '{{ (now().day == 15) and ((now().hour * 60) + (now().minute)
      == 840) }}'
  condition: []
  action:
  - service: script.birthday_text_holly
    data: {}
  mode: single
- id: '1679407893356'
  alias: Coffee Pot Timers
  description: turn off coffee pots after certain amount of time for safety
  trigger:
  - platform: state
    entity_id:
    - switch.basement_coffee_plug
    to: 'on'
    id: basement on
  - platform: state
    entity_id:
    - switch.upstairs_coffee_plug
    to: 'on'
    id: upstairs on
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.basement_coffee_timer
    id: basement off
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.upstairs_coffee_timer
    id: upstairs off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: basement on
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.basement_coffee_timer
    - conditions:
      - condition: trigger
        id: upstairs on
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.upstairs_coffee_timer
    - conditions:
      - condition: trigger
        id: basement off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.basement_coffee_plug
    - conditions:
      - condition: trigger
        id: upstairs off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.upstairs_coffee_plug
  mode: single
- id: '1679491406501'
  alias: Appliance Cabinet Light Manual Override
  description: override cabinset sensor when light is manually turned on or off
  trigger:
  - platform: state
    entity_id:
    - light.hallway
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    id: manual off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: manual off
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.appliance_cabinet_light
  mode: single
- id: '1679503390509'
  alias: Upstairs Staircase Motion Manual Override
  description: override motion sensor when manually turning lights on or off
  trigger:
  - platform: state
    entity_id:
    - light.upstairs_office
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
    id: manual switch off
  - platform: state
    entity_id:
    - light.upstairs_office
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: manual switch on
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: manual switch off
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.upstairs_office_light_status
    - conditions:
      - condition: trigger
        id: manual switch on
      - condition: and
        conditions:
        - type: is_no_motion
          condition: device
          device_id: a61ce62c5be730aaeb484b256fdd4d15
          entity_id: binary_sensor.upstairs_motion_sensor_occupancy
          domain: binary_sensor
        - type: is_not_open
          condition: device
          device_id: d547b5942df5993d0e556f6735060633
          entity_id: binary_sensor.upstairs_door_sensor_contact
          domain: binary_sensor
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.upstairs_office_light_status
  mode: single
- id: '1679505555393'
  alias: HVAC Assist
  description: turn on ceiling fans and box fans and vent fans to help with circulation
    and adjust temperature.
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''climate.house'',''hvac_action'') != ''idle'')
      and (state_attr(''climate.house'',''hvac_action'') != ''off'') }}'
    id: fan on
  - platform: template
    value_template: '{{ (state_attr(''climate.house'',''hvac_action'') == ''idle'')
      or (state_attr(''climate.house'',''hvac_action'') == ''off'') }}'
    id: fan off
  - platform: state
    entity_id:
    - input_number.nest_temp_high
    id: change
  - platform: state
    entity_id:
    - input_number.nest_temp_low
    id: change
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: fan on
      sequence:
      - if:
        - condition: state
          entity_id: switch.box_fan_plug
          state: 'on'
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.fan_helper_box
        else:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.box_fan_plug
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.vent_fan_plug
          - switch.box_fan_plug
    - conditions:
      - condition: trigger
        id: fan off
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.fan_helper_box
          state: 'on'
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.fan_helper_box
        else:
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.box_fan_plug
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.vent_fan_plug
          - switch.box_fan_plug
    - conditions:
      - condition: trigger
        id: change
      sequence:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: input_text.temp_adjust_room
          state: normal
        then:
        - service: script.temp_normal
          data: {}
        else:
        - if:
          - condition: state
            entity_id: input_text.temp_adjust_room
            state: kitchen
          then:
          - service: script.temp_normal
            data: {}
          - delay:
              hours: 0
              minutes: 1
              seconds: 0
              milliseconds: 0
          - service: script.temp_adjust_kitchen
            data: {}
          else:
          - if:
            - condition: state
              entity_id: input_text.temp_adjust_room
              state: family room
            then:
            - service: script.temp_normal
              data: {}
            - delay:
                hours: 0
                minutes: 1
                seconds: 0
                milliseconds: 0
            - service: script.temp_adjust_family_room
              data: {}
            else:
            - if:
              - condition: state
                entity_id: input_text.temp_adjust_room
                state: living room
              then:
              - service: script.temp_normal
                data: {}
              - delay:
                  hours: 0
                  minutes: 1
                  seconds: 0
                  milliseconds: 0
              - service: script.temp_adjust_living_room
                data: {}
              else:
              - if:
                - condition: state
                  entity_id: input_text.temp_adjust_room
                  state: basement
                then:
                - service: script.temp_normal
                  data: {}
                - delay:
                    hours: 0
                    minutes: 1
                    seconds: 0
                    milliseconds: 0
                - service: script.temp_adjust_basement
                  data: {}
                else:
                - if:
                  - condition: state
                    entity_id: input_text.temp_adjust_room
                    state: master bedroom
                  then:
                  - service: script.temp_normal
                    data: {}
                  - delay:
                      hours: 0
                      minutes: 1
                      seconds: 0
                      milliseconds: 0
                  - service: script.temp_adjust_master_bedroom
                    data: {}
  mode: single
- id: '1679508958053'
  alias: Mail Reminder Announcement
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.breezeway_leaving_house
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 15
  condition:
  - condition: time
    after: 06:00:00
    before: '16:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
  action:
  - if:
    - condition: state
      entity_id: input_boolean.mail_reminder
      state: 'on'
    then:
    - service: notify.alexa_media_portable_echo
      data:
        message: Please take the mail with you!
        data:
          type: tts
  mode: single
- id: '1679698078626'
  alias: Test Timer
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_number.second_alexa_timer
  condition: []
  action:
  - service: media_player.play_media
    data:
      media_content_type: custom
      media_content_id: set a timer for {{ states('input_number.second_alexa_timer')|round()
        }} minutes.
    target:
      entity_id: media_player.family_echo
  mode: single
- id: '1679750160033'
  alias: Sweeper Clean Group
  description: change clean sweeper on group change
  trigger:
  - platform: state
    entity_id:
    - input_boolean.clean_alice
    - input_boolean.clean_benson
    - input_boolean.clean_lurch
    - input_boolean.clean_mr_belvedere
    - input_boolean.clean_rosie
    to: 'on'
    id: 'on'
  - platform: state
    entity_id:
    - input_boolean.clean_alice
    - input_boolean.clean_benson
    - input_boolean.clean_mr_belvedere
    - input_boolean.clean_lurch
    - input_boolean.clean_rosie
    to: 'off'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.clean_sweepers
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.clean_alice
            state: 'off'
          - condition: state
            entity_id: input_boolean.clean_benson
            state: 'off'
          - condition: state
            entity_id: input_boolean.clean_lurch
            state: 'off'
          - condition: state
            entity_id: input_boolean.clean_mr_belvedere
            state: 'off'
          - condition: state
            entity_id: input_boolean.clean_rosie
            state: 'off'
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.clean_sweepers
  mode: single
- id: '1679842157772'
  alias: gitHub update
  description: ''
  trigger:
  - platform: template
    value_template: '{{ (now().hour == 11) and (now().weekday() == 6) }}'
  condition: []
  action:
  - service: shell_command.pushupdates_to_github
    data: {}
  mode: single
- id: '1680032773242'
  alias: Sweepers Run Vacancy
  description: Run sweepers when nobody is home.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.house_occuppied
    to: 'off'
    id: Leave
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Leave
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.sweeper_out_of_service_rosie
          state: 'off'
        then:
        - service: script.sweeper_rosie
          data: {}
      - service: input_datetime.set_datetime
        data:
          time: '{{ now().hour }}:{{ now().minute }}'
        target:
          entity_id: input_datetime.sweeper_temp
  mode: single
- id: '1680176602483'
  alias: Tag Master Bathroom Is Scanned
  description: ''
  trigger:
  - platform: tag
    tag_id: master_bathroom
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.clean_master_bathroom
  mode: single
- id: '1680194329716'
  alias: Dryer Running
  description: ''
  trigger:
  - type: moving
    platform: device
    device_id: 8dc57052502b5f7b50a72be17c41f95d
    entity_id: binary_sensor.dryer_sensor_moving
    domain: binary_sensor
    id: running
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: running
      sequence:
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
      - if:
        - type: is_moving
          condition: device
          device_id: 8dc57052502b5f7b50a72be17c41f95d
          entity_id: binary_sensor.dryer_sensor_moving
          domain: binary_sensor
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id:
            - input_boolean.dryer_running
            - input_boolean.dryer_loaded
        - if:
          - condition: state
            entity_id: input_boolean.alexa_laundry_routine
            state: 'off'
          then:
          - service: media_player.play_media
            data:
              media_content_id: enable laundry routine
              media_content_type: custom
            target:
              entity_id: media_player.laundry_echo
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.alexa_laundry_routine
  mode: single
- id: '1680286773607'
  alias: Laundry Routine
  description: disable alexa laundry routine after dryer idle for 2 hours
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dryer_sensor_moving
    to: 'off'
    for:
      hours: 2
      minutes: 0
      seconds: 0
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: media_player.play_media
    data:
      media_content_id: disable laundry routine
      media_content_type: custom
    target:
      entity_id: media_player.laundry_echo
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.alexa_laundry_routine
  mode: restart
- id: '1680342236411'
  alias: Tag Main Bathroom Is Scanned (Green)
  description: ''
  trigger:
  - platform: tag
    tag_id: main_bathroom
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.clean_green_bathroom
  mode: single
- id: '1680461773886'
  alias: Kitchen Motion
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_1_motion_sensor_occupancy
    - binary_sensor.kitchen_2_motion_sensor_occupancy
    to: 'on'
    id: motion
  - platform: state
    entity_id:
    - binary_sensor.kitchen_2_motion_sensor_occupancy
    - binary_sensor.kitchen_1_motion_sensor_occupancy
    to: 'off'
    id: no motion
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - if:
        - condition: state
          entity_id: light.kitchen
          state: 'off'
        then:
        - if:
          - condition: sun
            before: sunset
            after: sunrise
            after_offset: -01:00:00
          then:
          - service: light.turn_on
            data:
              brightness_pct: 100
            target:
              entity_id:
              - light.kitchen_fan
              - light.kitchen_fridge
          else:
          - service: light.turn_on
            data:
              brightness_pct: 20
            target:
              entity_id:
              - light.kitchen_fan
              - light.kitchen_fridge
          - service: light.turn_on
            data:
              color_name: white
              brightness_pct: 20
            target:
              entity_id: light.uc_strip_1
    - conditions:
      - condition: trigger
        id: no motion
      sequence:
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.kitchen_1_motion_sensor_occupancy
            state: 'off'
          - condition: state
            entity_id: binary_sensor.kitchen_2_motion_sensor_occupancy
            state: 'off'
        then:
        - delay:
            hours: 0
            minutes: 5
            seconds: 0
            milliseconds: 0
        - service: light.turn_off
          data:
            transition: 30
          target:
            entity_id:
            - light.kitchen
            - light.uc_strip_1
  mode: restart
- id: '1681492396581'
  alias: Holly Phone Alarm Set
  description: set alarm on alexa from holly's phone for work.  backup measure
  trigger:
  - type: plugged_in
    platform: device
    device_id: d5c90cbe64148e49a56d125f102123f3
    entity_id: binary_sensor.sm_g960u_is_charging
    domain: binary_sensor
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ has_value(''sensor.master_echo_next_alarm'') == false }}'
    - condition: time
      after: '20:00:00'
      weekday:
      - sun
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
  action:
  - service: script.holly_phone_alarm
    data: {}
  mode: single
- id: '1681740485286'
  alias: Garage Door Button
  description: open/close garage doors on button helper press
  trigger:
  - platform: state
    entity_id:
    - input_button.green_door_helper_button
    id: green
  - platform: state
    entity_id:
    - input_button.blue_door_helper_button
    id: blue
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: green
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.green_garage_door_sensor_contact
          state: 'off'
        then:
        - service: ifttt.trigger
          data:
            event: green_door_open
        else:
        - service: ifttt.trigger
          data:
            event: green_door_close
    - conditions:
      - condition: trigger
        id: blue
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.blue_garage_door_sensor_contact
          state: 'off'
        then:
        - service: ifttt.trigger
          data:
            event: blue_door_open
        else:
        - service: ifttt.trigger
          data:
            event: blue_door_close
  mode: single
- id: '1681833989198'
  alias: Guest Wifi Password Reset
  description: keeps wifi password in system by enabling everyday for five minutes
  trigger:
  - platform: time
    at: 00:10:00
  condition:
  - condition: state
    entity_id: switch.visitors
    state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.visitors
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.visitors
  mode: single
- id: '1681911626232'
  alias: Holly Phone Alarm Backup Cancel
  description: cancel Holly's backup work alarm
  trigger:
  - platform: state
    entity_id:
    - light.master_bathroom
    to: 'on'
  - platform: state
    entity_id:
    - switch.upstairs_coffee_plug
    to: 'on'
  condition:
  - condition: time
    after: 04:00:00
    before: 04:10:00
    weekday:
    - sun
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
  action:
  - service: media_player.play_media
    data:
      media_content_type: custom
      media_content_id: '{% from ''alarmCancel.jinja'' import alarmCancel %} {% if
        has_value(''sensor.master_echo_next_alarm'') == True %} {{ alarmCancel() }}
        {% else %} what time is it? {% endif %}

        '
    target:
      entity_id: media_player.basement_echo
  mode: single
- id: '1681912314671'
  alias: Seasonal Automations
  description: turns automation on and off according to seasons
  trigger:
  - platform: state
    entity_id:
    - sensor.season
    to: spring
    id: spring
  - platform: state
    entity_id:
    - sensor.season
    to: summer
    id: summer
  - platform: state
    entity_id:
    - sensor.season
    to: autumn
    id: fall
  - platform: state
    entity_id:
    - sensor.season
    to: winter
    id: winter
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: spring
      sequence:
      - service: automation.turn_off
        data:
          stop_actions: true
        target:
          entity_id:
          - automation.vaporizer_schedule
          - automation.upstairs_space_heater
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.green_plug
          - switch.yellow_plug
    - conditions:
      - condition: trigger
        id: summer
      sequence: []
    - conditions:
      - condition: trigger
        id: fall
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.upstairs_space_heater
    - conditions:
      - condition: trigger
        id: winter
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.vaporizer_schedule
  mode: single
- id: '1682014139520'
  alias: Landing Motion Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.breezeway
    - light.basement_staircase
  condition: []
  action:
  - if:
    - condition: and
      conditions:
      - condition: state
        entity_id: light.breezeway
        state: 'off'
      - condition: state
        entity_id: light.basement_staircase
        state: 'off'
    then:
    - service: light.turn_off
      data:
        transition: 60
      target:
        entity_id: light.wiz_bulb
    else:
    - service: light.turn_on
      data:
        color_name: white
        brightness_pct: 75
      target:
        entity_id: light.wiz_bulb
  mode: single
- id: '1682359701039'
  alias: Upstairs Staircase Motion Lights
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: d547b5942df5993d0e556f6735060633
    entity_id: binary_sensor.upstairs_door_sensor_contact
    domain: binary_sensor
    id: light on
  - type: motion
    platform: device
    device_id: a61ce62c5be730aaeb484b256fdd4d15
    entity_id: binary_sensor.upstairs_motion_sensor_occupancy
    domain: binary_sensor
    id: light on
  - type: not_opened
    platform: device
    device_id: d547b5942df5993d0e556f6735060633
    entity_id: binary_sensor.upstairs_door_sensor_contact
    domain: binary_sensor
    id: light off
  - type: no_motion
    platform: device
    device_id: a61ce62c5be730aaeb484b256fdd4d15
    entity_id: binary_sensor.upstairs_motion_sensor_occupancy
    domain: binary_sensor
    id: light off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: light on
      sequence:
      - if:
        - condition: state
          entity_id: light.upstairs_office
          state: 'off'
        then:
        - if:
          - condition: sun
            before: sunrise
            before_offset: -01:00:00
            after: sunset
          then:
          - service: light.turn_on
            data:
              brightness_pct: 20
            target:
              entity_id: light.upstairs_office
          else:
          - service: light.turn_on
            data:
              brightness_pct: 100
            target:
              entity_id: light.upstairs_office
        else: []
    - conditions:
      - condition: trigger
        id: light off
      sequence:
      - if:
        - condition: and
          conditions:
          - type: is_no_motion
            condition: device
            device_id: a61ce62c5be730aaeb484b256fdd4d15
            entity_id: binary_sensor.upstairs_motion_sensor_occupancy
            domain: binary_sensor
          - type: is_not_open
            condition: device
            device_id: d547b5942df5993d0e556f6735060633
            entity_id: binary_sensor.upstairs_door_sensor_contact
            domain: binary_sensor
        then:
        - if:
          - condition: state
            entity_id: input_boolean.upstairs_office_light_status
            state: 'off'
          then:
          - delay:
              hours: 0
              minutes: 1
              seconds: 0
              milliseconds: 0
          - service: light.turn_off
            data: {}
            target:
              entity_id: light.upstairs_office
          else:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.upstairs_office_light_status
  mode: restart
- id: '1682376115596'
  alias: Garage Light Turn On
  description: Turn on garage light when garage door opens.
  trigger:
  - type: opened
    platform: device
    device_id: b270b50d5f6f44f6258044a29618be00
    entity_id: binary_sensor.garage_door_open
    domain: binary_sensor
  condition: []
  action:
  - service: light.turn_on
    data:
      brightness_pct: 100
    target:
      entity_id: light.garage
  mode: single
- id: '1682538436860'
  alias: Outside Work
  description: lock and unlock door according to garage doors while working outside
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.green_garage_door_sensor_contact
    - binary_sensor.blue_garage_door_sensor_contact
    to: 'on'
    id: open
  - platform: state
    entity_id:
    - binary_sensor.green_garage_door_sensor_contact
    - binary_sensor.blue_garage_door_sensor_contact
    to: 'off'
    id: closed
  - platform: device
    device_id: b270b50d5f6f44f6258044a29618be00
    domain: lock
    entity_id: lock.garage_door
    type: locked
    id: lock
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: open
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.green_garage_door_sensor_contact
            state: 'on'
          - condition: state
            entity_id: binary_sensor.blue_garage_door_sensor_contact
            state: 'on'
        then:
        - service: lock.unlock
          data: {}
          target:
            entity_id: lock.garage_door
    - conditions:
      - condition: trigger
        id: closed
      sequence:
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.green_garage_door_sensor_contact
            state: 'off'
          - condition: state
            entity_id: binary_sensor.blue_garage_door_sensor_contact
            state: 'off'
        then:
        - service: lock.lock
          data: {}
          target:
            entity_id: lock.garage_door
    - conditions:
      - condition: trigger
        id: lock
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: lock.unlock
        data: {}
        target:
          entity_id: lock.garage_door
  mode: single
- id: '1682538678007'
  alias: 'Outside Work ON/OFF '
  description: turn outside work automation on and off with alexa command
  trigger:
  - platform: state
    entity_id:
    - input_boolean.outside_work
    id: work
  - type: not_opened
    platform: device
    device_id: b270b50d5f6f44f6258044a29618be00
    entity_id: binary_sensor.garage_door_open
    domain: binary_sensor
    id: lock
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: work
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.outside_work
          state: 'on'
        then:
        - service: lock.unlock
          data: {}
          target:
            entity_id: lock.garage_door
        - delay:
            hours: 0
            minutes: 0
            seconds: 0
            milliseconds: 300
        - service: script.blue_door
          data: {}
        - delay:
            hours: 0
            minutes: 0
            seconds: 0
            milliseconds: 300
        - service: automation.turn_on
          data: {}
          target:
            entity_id: automation.outside_work
        else:
        - service: automation.turn_off
          data:
            stop_actions: false
          target:
            entity_id: automation.outside_work
        - if:
          - condition: state
            entity_id: binary_sensor.green_garage_door_sensor_contact
            state: 'on'
          then:
          - service: script.green_door
            data: {}
        - if:
          - condition: state
            entity_id: binary_sensor.blue_garage_door_sensor_contact
            state: 'on'
          then:
          - service: script.blue_door
            data: {}
        - service: lock.unlock
          data: {}
          target:
            entity_id: lock.garage_door
        - delay:
            hours: 0
            minutes: 5
            seconds: 0
            milliseconds: 0
        - service: lock.lock
          data: {}
          target:
            entity_id: lock.house_locks
    - conditions:
      - condition: trigger
        id: lock
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 15
          milliseconds: 0
      - service: lock.lock
        data: {}
        target:
          entity_id: lock.garage_door
  mode: single
- id: '1682616369321'
  alias: Home Occupied
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupancy
    to: 'off'
    id: 'off'
  - platform: state
    entity_id:
    - binary_sensor.home_occupancy
    to: 'on'
    id: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - service: script.temp_away
        data: {}
  mode: single
- id: '1682694655208'
  alias: Thermostat Adjustment
  description: Adjust Thermostat every hour according to temperature differences
  trigger:
  - platform: template
    value_template: '{{ (now().hour*60+now().minute)%60==25 }}'
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ states(''input_text.temp_adjust_room'',''state'') == "basement"
        }}'
    then:
    - service: script.temp_adjust_basement
      data: {}
    else: []
  - if:
    - condition: template
      value_template: '{{ states(''input_text.temp_adjust_room'',''state'') == "kitchen"
        }}'
    then:
    - service: script.temp_adjust_kitchen
      data: {}
  - if:
    - condition: template
      value_template: '{{ states(''input_text.temp_adjust_room'',''state'') == "family
        room" }}'
    then:
    - service: script.temp_adjust_family_room
      data: {}
  - if:
    - condition: template
      value_template: '{{ states(''input_text.temp_adjust_room'',''state'') == "living
        room" }}'
    then:
    - service: script.temp_adjust_living_room
      data: {}
  - if:
    - condition: template
      value_template: '{{ states(''input_text.temp_adjust_room'',''state'') == "master
        bedroom" }}'
    then:
    - service: script.temp_adjust_master_bedroom
      data: {}
  mode: single
- id: '1683313672023'
  alias: Tag Garage Doors
  description: open and close garage doors by scanning nfc tag.
  trigger:
  - platform: tag
    tag_id: Green Door
    id: green
  - platform: tag
    tag_id: Blue Door
    id: blue
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: green
      sequence:
      - service: script.green_door
        data: {}
    - conditions:
      - condition: trigger
        id: blue
      sequence:
      - service: script.blue_door
        data: {}
  mode: single
- id: '1683816098361'
  alias: Holly Bedside Button
  description: control ceiling fan and bedside lamp with button.
  trigger:
  - platform: device
    domain: mqtt
    device_id: 7cb3e5fa8e80fb0b1d26bf8c4bb0fdf5
    type: click
    subtype: single
    discovery_id: 0x00158d000927011b click_single
    id: single
  - platform: device
    domain: mqtt
    device_id: 7cb3e5fa8e80fb0b1d26bf8c4bb0fdf5
    type: action
    subtype: hold
    discovery_id: 0x00158d000927011b action_hold
    id: hold
  - platform: device
    domain: mqtt
    device_id: 7cb3e5fa8e80fb0b1d26bf8c4bb0fdf5
    type: click
    subtype: double
    discovery_id: 0x00158d000927011b click_double
    id: double
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single
      sequence:
      - service: fan.toggle
        data: {}
        target:
          entity_id: fan.master_fan
    - conditions:
      - condition: trigger
        id: double
      - condition: state
        entity_id: fan.master_fan
        state: 'on'
      sequence:
      - service: script.master_fan_speed
        data: {}
    - conditions:
      - condition: trigger
        id: hold
      sequence:
      - if:
        - condition: state
          entity_id: light.holly_lamp
          state: 'on'
        then:
        - service: light.turn_off
          data: {}
          target:
            entity_id: light.holly_lamp
        else:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.holly_lamp
  mode: single
- id: '1684171685828'
  alias: Weather Work
  description: 'set weather for when Holly gets out of work.

    '
  trigger:
  - platform: time
    at: 00:10:00
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{{ state_attr(''weather.openweathermap'',''forecast'') [6][''condition'']
        }}'
    target:
      entity_id: input_text.weather_condition_work
  - service: input_number.set_value
    data:
      value: '{{ state_attr(''weather.openweathermap'',''forecast'') [6][''temperature'']
        }}'
    target:
      entity_id: input_number.weather_temperature_work
  mode: single
- id: '1684431448199'
  alias: Visitors ON
  description: turn on visitors when doorbell rings
  trigger:
  - type: occupied
    platform: device
    device_id: 0ce9b5f7ac710b9519b09723866ccaed
    entity_id: binary_sensor.porch_door_bell_ding
    domain: binary_sensor
  condition:
  - condition: and
    conditions:
    - condition: zone
      entity_id: person.holly
      zone: zone.home
    - condition: zone
      entity_id: person.mark
      zone: zone.home
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.visitors
  mode: single
- id: '1684439426121'
  alias: Company Porch Door
  description: turn on visitors when company arrives.
  trigger:
  - type: opened
    platform: device
    device_id: 519c891a29ed13cca3d14e46a9b68e00
    entity_id: binary_sensor.porch_door_open
    domain: binary_sensor
  condition:
  - condition: template
    value_template: '{{now().strftime("%a %h %d %H:%M %Z %Y") >= as_timestamp(states.sensor.porch_door_bell_last_ding.last_changed)
      | timestamp_custom("%a %h %d %H:%M %Z %Y") >= (now() - timedelta(minutes=10)).strftime("%a
      %h %d %H:%M %Z %Y")}}

      '
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.visitors
  mode: single
- id: '1684440831875'
  alias: Who Is Home
  description: set who is home for greetings and other automations
  trigger:
  - platform: zone
    entity_id: person.holly
    zone: zone.home
    event: enter
    id: enter_holly
  - platform: zone
    entity_id: person.holly
    zone: zone.home
    event: leave
    id: leave_holly
  - platform: zone
    entity_id: person.mark
    zone: zone.home
    event: enter
    id: enter_mark
  - platform: zone
    entity_id: person.mark
    zone: zone.home
    event: leave
    id: leave_mark
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: enter_holly
      sequence:
      - if:
        - condition: state
          entity_id: person.mark
          state: home
        then:
        - service: input_text.set_value
          data:
            value: Mark and Holly
          target:
            entity_id: input_text.who_is_home
        else:
        - service: input_text.set_value
          data:
            value: Holly
          target:
            entity_id: input_text.who_is_home
    - conditions:
      - condition: trigger
        id: enter_mark
      sequence:
      - if:
        - condition: state
          entity_id: person.holly
          state: home
        then:
        - service: input_text.set_value
          data:
            value: Mark and Holly
          target:
            entity_id: input_text.who_is_home
        else:
        - service: input_text.set_value
          data:
            value: Mark
          target:
            entity_id: input_text.who_is_home
    - conditions:
      - condition: trigger
        id: leave_holly
      sequence:
      - if:
        - condition: state
          entity_id: person.mark
          state: home
        then:
        - service: input_text.set_value
          data:
            value: Mark
          target:
            entity_id: input_text.who_is_home
        else:
        - service: input_text.set_value
          data:
            value: no one
          target:
            entity_id: input_text.who_is_home
    - conditions:
      - condition: trigger
        id: leave_mark
      sequence:
      - if:
        - condition: state
          entity_id: person.holly
          state: home
        then:
        - service: input_text.set_value
          data:
            value: Holly
          target:
            entity_id: input_text.who_is_home
        else:
        - service: input_text.set_value
          data:
            value: no one
          target:
            entity_id: input_text.who_is_home
  mode: single
- id: '1684535780487'
  alias: Welcome Text for Greeting
  description: Set who is coming home for greeting in breezeway
  trigger:
  - platform: zone
    entity_id: person.holly
    zone: zone.home
    event: enter
    id: holly
  - platform: zone
    entity_id: person.mark
    zone: zone.home
    event: enter
    id: mark
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: holly
      sequence:
      - if:
        - condition: template
          value_template: '{{ states.person.mark.last_changed >= now() - timedelta(
            minutes = 5 ) }}'
        then:
        - service: input_text.set_value
          data:
            value: Mark and Holly
          target:
            entity_id: input_text.welcome_home
        else:
        - service: input_text.set_value
          data:
            value: Holly
          target:
            entity_id: input_text.welcome_home
    - conditions:
      - condition: trigger
        id: mark
      sequence:
      - if:
        - condition: template
          value_template: '{{ states.person.holly.last_changed >= now() - timedelta(
            minutes = 5 ) }}'
        then:
        - service: input_text.set_value
          data:
            value: Mark and Holly
          target:
            entity_id: input_text.welcome_home
        else:
        - service: input_text.set_value
          data:
            value: Mark
          target:
            entity_id: input_text.welcome_home
  mode: single
- id: '1684536605201'
  alias: Welcome Home Message
  description: Greet who ever is coming home.
  trigger:
  - type: opened
    platform: device
    device_id: b270b50d5f6f44f6258044a29618be00
    entity_id: binary_sensor.garage_door_open
    domain: binary_sensor
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ as_timestamp(states.input_text.who_is_home.last_changed)
        | timestamp_custom("%a %h %d %H:%M %Z %Y") >= (now() - timedelta(minutes=10)).strftime("%a
        %h %d %H:%M %Z")}}

        '
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ as_timestamp(states.person.mark.last_changed) | timestamp_custom("%a
          %h %d %H:%M %Z %Y") >= (now() - timedelta(minutes=10)).strftime("%a %h %d
          %H:%M %Z")}}

          '
      - condition: template
        value_template: '{{ as_timestamp(states.person.holly.last_changed) | timestamp_custom("%a
          %h %d %H:%M %Z %Y") >= (now() - timedelta(minutes=10)).strftime("%a %h %d
          %H:%M %Z")}}

          '
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: notify.alexa_media
    data:
      message: '{{ [''Welcome home '', ''Happy to see you '', ''Come on in ''] | random
        }}{{ states(''input_text.welcome_home'',''state'') }}.'
      target:
      - media_player.portable_echo
      data:
        type: tts
  mode: single
- id: '1684692216507'
  alias: MQTT Publishing
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.kitchen_temp_sensor_temperature
    id: kitchentemp
  - platform: state
    entity_id:
    - sensor.family_room_temp_sensor_temperature
    id: familyroomtemp
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: kitchentemp
      - condition: template
        value_template: '{{ has_value(''sensor.kitchen_temp_sensor_temperature'')
          }}'
      sequence:
      - service: mqtt.publish
        data:
          qos: 0
          retain: true
          topic: house/kitchen/temperature_f
          payload_template: '{{ (states(''sensor.kitchen_temp_sensor_temperature'',''state'')
            | round(1)) }}

            '
    - conditions:
      - condition: trigger
        id: familyroomtemp
      - condition: template
        value_template: '{{ has_value(''sensor.family_room_temp_sensor_temperature'')
          }}'
      sequence:
      - service: mqtt.publish
        data:
          qos: 0
          retain: false
          topic: house/family_room/temperature_f
          payload_template: '{{ (states(''sensor.family_room_temp_sensor_temperature'',''state'')
            | round(1)) }}

            '
  mode: single
- id: '1684957489072'
  alias: Breezeway Motions
  description: ''
  trigger:
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: leaving_house_event
      event_response_type: ResponseYes
    id: leaving yes
  - platform: event
    event_type: alexa_actionable_notification
    event_data:
      event_id: leaving_house_event
      event_response_type: ResponseNo
    id: leaving no
  - platform: state
    entity_id:
    - binary_sensor.breezeway_motion_sensor_motion
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: markwatch
  - platform: event
    event_type: alexa_actionable_notification
    id: other yes
    event_data:
      event_id: other_door_event
      event_response_type: ResponseYes
  - platform: event
    event_type: alexa_actionable_notification
    id: other no
    event_data:
      event_id: other_door_event
      event_response_type: ResponseNo
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.garage_door_open
      state: 'off'
    - condition: template
      value_template: '{{ (states.person.mark.last_changed) <= (now() - timedelta(minutes=5))
        }}'
    - condition: time
      after: 05:00:00
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: leaving yes
      sequence:
      - service: script.leaving_house_mark
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: script.mark_green
        data: {}
    - conditions:
      - condition: trigger
        id: leaving no
      sequence:
      - service: script.activate_alexa_actionable_notification
        data:
          text: Mark, are you taking the car now?
          event_id: other_door_event
          alexa_device: media_player.portable_echo
    - conditions:
      - condition: trigger
        id: markwatch
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.garage_door_open
          state: 'off'
        - condition: template
          value_template: '{{ (states.person.mark.last_changed) <= (now() - timedelta(minutes=5))
            }}'
        - condition: time
          after: 05:00:00
      sequence:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: sensor.mark_note_ble_room_presence
            state: Corridor
          - condition: state
            entity_id: sensor.galaxy_watch_0ddf_room_presence
            state: Corridor
        then:
        - service: script.activate_alexa_actionable_notification
          data:
            text: Mark, are you taking the truck now?
            event_id: leaving_house_event
            alexa_device: media_player.portable_echo
    - conditions:
      - condition: trigger
        id: other yes
      sequence:
      - service: script.leaving_house_holly
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: script.mark_blue
        data: {}
    - conditions:
      - condition: trigger
        id: other no
      sequence:
      - service: lock.unlock
        data: {}
        target:
          entity_id: lock.house_locks
  mode: single
- id: '1685199519507'
  alias: NWS TEST
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.nws_alerts
    above: 1
  condition: []
  action:
  - service: notify.mobile_app_sm_n960u
    data:
      message: 'This is a <b><span style="color: red">HTML</span></b> <i>text</i><br><br>This
        is a text after a new line'
      title: NWS ALERT
      data:
        icon_url: https://github.com/home-assistant/assets/blob/master/logo/logo-small.png?raw=true
        channel: HA-Alert
        ledColor: red
  - service: notify.mobile_app_sm_g960u
    data:
      message: TTS
      data:
        tts_text: Hello Holly
    enabled: false
  - service: notify.mobile_app_sm_n960u
    data:
      message: TTS
      data:
        tts_text: '{# chore list #} {% from ''choreList.jinja'' import choreList %}  {%
          from ''cleanup.jinja'' import cleanup %} {# a macro to call all macros :)  #}  {%-
          macro mother_of_all_macros() -%} {{ choreList() }} {%- endmacro -%} {# Call
          the macro  #} {{- cleanup(mother_of_all_macros()) -}}'
        media_stream: alarm_stream_max
    enabled: false
  mode: single
- id: '1685391095013'
  alias: RA PI Down
  description: text Mark when room assistant pizero down for 15 minutes.
  trigger:
  - platform: template
    value_template: '{{ now() - timedelta(minutes=15) >= states.binary_sensor.breezewayra.last_changed
      }}'
    id: breezewayRA
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: breezewayRA
      sequence:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: binary_sensor.breezewayra
            state: 'on'
        then:
        - service: notify.email
          data:
            message: Breezeway Raspberry Pi has been disconnected for more that 15
              minutes.
            title: BreezewayPI
            target:
            - 3305243522@vtext.com
  mode: single
